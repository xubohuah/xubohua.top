import{_ as s,c as n,o as a,a as p}from"./app.48148ea1.js";const u=JSON.parse('{"title":"Context Module Functions","description":"","frontmatter":{},"headers":[],"relativePath":"React/reactpatterns/ContextModuleFunctions.md","lastUpdated":null}'),l={name:"React/reactpatterns/ContextModuleFunctions.md"},o=p(`<h1 id="context-module-functions" tabindex="-1">Context Module Functions <a class="header-anchor" href="#context-module-functions" aria-hidden="true">#</a></h1><p>Context Module Functions\u5141\u8BB8\u60A8\u5C06\u4E00\u7EC4\u590D\u6742\u7684\u72B6\u6001\u66F4\u6539\u5C01\u88C5\u5230\u4E00\u4E2A\u5B9E\u7528\u51FD\u6570\u4E2D\uFF0C\u8BE5\u5B9E\u7528\u51FD\u6570\u53EF\u4EE5\u8FDB\u884C\u6811\u5F62\u6296\u52A8\u548C\u5EF6\u8FDF\u52A0\u8F7D\u3002(tree-shaken and lazily loaded.)</p><p>\u4E00\u4E2A\u7B80\u5355Context\u548C reducer \u7EC4\u5408\u7684\u793A\u4F8B\uFF1A</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;react&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CounterContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">actionTypes</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {                </span><span style="color:#8B949E;">//\u9632\u6B62\u5199\u9519\uFF0C</span></span>
<span class="line"><span style="color:#C9D1D9;">    increment: </span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    decrement: </span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CounterProvider</span><span style="color:#C9D1D9;">({</span><span style="color:#FFA657;">step</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">initialCount</span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">,</span><span style="color:#FF7B72;">...</span><span style="color:#FFA657;">props</span><span style="color:#C9D1D9;">}){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">state</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">dispatch</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useReducer</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">        (</span><span style="color:#FFA657;">state</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">action</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">change</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> action.step</span><span style="color:#FF7B72;">??</span><span style="color:#C9D1D9;">step</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">switch</span><span style="color:#C9D1D9;"> (action.type) {</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> actionTypes.increment:</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">state,count:state.count</span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;">change}</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> actionTypes.decrement:</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">state,count:state.count</span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;">change}</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#FF7B72;">default</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">                    </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">\`\u6CA1\u6709\u8FD9\u4E2A\${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">.</span><span style="color:#C9D1D9;">type</span><span style="color:#A5D6FF;">}\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">            }</span></span>
<span class="line"><span style="color:#C9D1D9;">        },</span></span>
<span class="line"><span style="color:#C9D1D9;">        {count:initialCount}</span></span>
<span class="line"><span style="color:#C9D1D9;">    )</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">[state,dispatch]</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">CounterContext.Provider</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">value</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">{...</span><span style="color:#C9D1D9;">props</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCounter</span><span style="color:#C9D1D9;">(){</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">context</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useContext</span><span style="color:#C9D1D9;">(CounterContext)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;">(context</span><span style="color:#FF7B72;">===</span><span style="color:#79C0FF;">undefined</span><span style="color:#C9D1D9;">){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">\`useCounter must be used within a CounterProvider\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> context</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> {CounterProvider,useCounter}</span></span>
<span class="line"><span style="color:#8B949E;">// src/screens/counter.js</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> {useCounter} </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;context/counter&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Counter</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">state</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">dispatch</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCounter</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">decrement</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;Current Count: </span><span style="color:#FF7B72;">{</span><span style="color:#C9D1D9;">state.count</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">decrement</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;-&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">increment</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;+&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#8B949E;">// src/index.js</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> {CounterProvider} </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;context/counter&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">CounterProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">Counter</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">CounterProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><blockquote><p>\u6211\u60F3\u4E13\u6CE8\u4E8E\u6211\u4EEC\u7684 reducer\uFF08<code>Counter</code>\u7EC4\u4EF6\uFF09\u7684\u7528\u6237\u3002\u4ED6\u4EEC\u5FC5\u987B\u521B\u5EFA\u81EA\u5DF1\u7684<code>increment</code>\u548C<code>decrement</code>\u8C03\u7528<code>dispatch</code>. \u8FD9\u4E0D\u662F\u4E00\u4E2A\u597D\u7684\u7684 API\u3002<code>dispatch</code>\u5F53\u60A8\u6709\u4E00\u7CFB\u5217\u9700\u8981\u8C03\u7528\u7684\u51FD\u6570\u65F6\uFF08\u5C31\u50CF\u60A8\u5C06\u5728\u6211\u4EEC\u7684\u7EC3\u4E60\u4E2D\u770B\u5230\u7684\u90A3\u6837\uFF09\uFF0C\u5B83\u53D8\u5F97\u66F4\u52A0\u70E6\u4EBA\u3002</p><p>\u7B2C\u4E00\u4E2A\u503E\u5411\u662F\u521B\u5EFA\u201C\u8F85\u52A9\u201D\u51FD\u6570\u5E76\u5C06\u5B83\u4EEC\u5305\u542B\u5728\u4E0A\u4E0B\u6587\u4E2D\u3002\u8BA9\u6211\u4EEC\u8FD9\u6837\u505A\u3002\u4F60\u4F1A\u6CE8\u610F\u5230\u6211\u4EEC\u5FC5\u987B\u628A\u5B83\u653E\u8FDB\u53BB\uFF0C <code>React.useCallback</code>\u8FD9\u6837\u6211\u4EEC\u624D\u80FD\u5728\u4F9D\u8D56\u5217\u8868\u4E2D\u5217\u51FA\u6211\u4EEC\u7684\u201C\u5E2E\u52A9\u201D\u51FD\u6570\uFF09\uFF1A</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useCallback</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">  () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">}),</span></span>
<span class="line"><span style="color:#C9D1D9;">  [dispatch],</span></span>
<span class="line"><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">decrement</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useCallback</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">  () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">}),</span></span>
<span class="line"><span style="color:#C9D1D9;">  [dispatch],</span></span>
<span class="line"><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {state, increment, decrement}</span></span>
<span class="line"><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">CounterContext.Provider</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">value</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">{...</span><span style="color:#C9D1D9;">props</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;">// now users can consume it like this:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> {</span><span style="color:#79C0FF;">state</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">increment</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">decrement</span><span style="color:#C9D1D9;">} </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCounter</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8FD9\u4E2A\u65B9\u6848\u4E0D\u662F\u4E0D\u597D\u7684</p><blockquote><p>\u8F85\u52A9\u65B9\u6CD5\u662F\u5BF9\u8C61\u5783\u573E\uFF0C\u6211\u4EEC\u9700\u8981\u91CD\u65B0\u521B\u5EFA\u548C\u6BD4\u8F83\u5B83\u4EEC\uFF0C\u9664\u4E86\u8868\u9762\u4E0A\u770B\u8D77\u6765\u66F4\u597D\u770B\u7684\u8BED\u6CD5\u4E4B\u5916\u6CA1\u6709\u5176\u4ED6\u76EE\u7684\u3002</p><p>\uFF08Helper methods are object junk that we need to recreate and compare for no purpose other than superficially nicer looking syntax.\uFF09</p></blockquote><p>\u63A8\u8350\u7684\uFF08\u4EE5\u53CA Facebook \u6240\u505A\u7684\uFF09\u662F\u4F20\u9012\u8C03\u5EA6\u3002\u4E3A\u4E86\u89E3\u51B3\u6211\u4EEC\u6700\u521D\u8BD5\u56FE\u89E3\u51B3\u7684\u70E6\u607C\uFF0C\u4ED6\u4EEC\u4F7F\u7528\u4E86\u63A5\u53D7\u7684\u53EF\u5BFC\u5165\u201C\u52A9\u624B\u201D <code>dispatch</code>\u3002\u8BA9\u6211\u4EEC\u770B\u4E00\u4E0B\u5B83\u7684\u5916\u89C2\uFF1A</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#8B949E;">// src/context/counter.js</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CounterContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CounterProvider</span><span style="color:#C9D1D9;">({</span><span style="color:#FFA657;">step</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">initialCount</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">...</span><span style="color:#FFA657;">props</span><span style="color:#C9D1D9;">}) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">state</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">dispatch</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useReducer</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">    (</span><span style="color:#FFA657;">state</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">action</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">change</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> action.step </span><span style="color:#FF7B72;">??</span><span style="color:#C9D1D9;"> step</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">switch</span><span style="color:#C9D1D9;"> (action.type) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">          </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">state, count: state.count </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> change}</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">          </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> {</span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">state, count: state.count </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> change}</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">default</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">          </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">\`Unhandled action type: \${</span><span style="color:#C9D1D9;">action</span><span style="color:#A5D6FF;">.</span><span style="color:#C9D1D9;">type</span><span style="color:#A5D6FF;">}\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">      }</span></span>
<span class="line"><span style="color:#C9D1D9;">    },</span></span>
<span class="line"><span style="color:#C9D1D9;">    {count: initialCount},</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">	</span><span style="color:#8B949E;">//\u4E5F\u53EF\u4EE5\u76F4\u63A5\u653E\u5728\u8FD9\u91CC</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [state, dispatch]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">CounterContext.Provider</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">value</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">{...</span><span style="color:#C9D1D9;">props</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCounter</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">context</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useContext</span><span style="color:#C9D1D9;">(CounterContext)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (context </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">undefined</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">\`useCounter must be used within a CounterProvider\`</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> context</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">dispatch</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;increment&#39;</span><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">decrement</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">dispatch</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">dispatch</span><span style="color:#C9D1D9;">({type: </span><span style="color:#A5D6FF;">&#39;decrement&#39;</span><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> {CounterProvider, useCounter, increment, decrement}</span></span>
<span class="line"><span style="color:#8B949E;">// src/screens/counter.js</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> {useCounter, increment, decrement} </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;context/counter&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Counter</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">state</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">dispatch</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCounter</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;Current Count: </span><span style="color:#FF7B72;">{</span><span style="color:#C9D1D9;">state.count</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">decrement</span><span style="color:#C9D1D9;">(dispatch)</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;-&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;">(dispatch)</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;+&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>**\u53EF\u80FD\u770B\u8D77\u6765\u6709\u70B9\u77EB\u6789\u8FC7\u6B63\uFF0C\u800C\u4E14\u786E\u5B9E\u5982\u6B64\u3002**\u4F46\u662F\uFF0C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u79CD\u6A21\u5F0F\u4E0D\u4EC5\u53EF\u4EE5\u5E2E\u52A9\u60A8\u51CF\u5C11\u91CD\u590D\uFF0C\u8FD8 <a href="https://twitter.com/dan_abramov/status/1125774170154065920" target="_blank" rel="noreferrer">\u53EF\u4EE5\u5E2E\u52A9\u63D0\u9AD8\u6027\u80FD</a> \u5E76\u5E2E\u52A9\u60A8\u907F\u514D\u4F9D\u8D56\u9879\u5217\u8868\u4E2D\u7684\u9519\u8BEF\u3002</p><p>\u4E0D\u4F1A\u4E00\u76F4\u63A8\u8350\u8FD9\u4E2A\uFF0C\u4F46\u6709\u65F6\u5B83\u4F1A\u6709\u6240\u5E2E\u52A9\uFF01</p><p>\u{1F4DC} \u5982\u679C\u9700\u8981\u67E5\u770B\u4E0A\u4E0B\u6587 API\uFF0C\u4EE5\u4E0B\u662F\u6587\u6863\uFF1A</p><ul><li><a href="https://reactjs.org/docs/context.html" target="_blank" rel="noreferrer">https://reactjs.org/docs/context.html</a></li><li><a href="https://reactjs.org/docs/hooks-reference.html#usecontext" target="_blank" rel="noreferrer">https://reactjs.org/docs/hooks-reference.html#usecontext</a></li></ul><p>\u{1F989} React DevTools--\u533A\u5206\u663E\u793A</p><div class="language-javascript line-numbers-mode"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">MyContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">MyContext.displayName </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;MyContext&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p style="font-size:5px;">2020 Sep.<span></span></p></blockquote>`,5),e=[o];function c(r,t,D,y,F,C){return a(),n("div",null,e)}const b=s(l,[["render",c]]);export{u as __pageData,b as default};
