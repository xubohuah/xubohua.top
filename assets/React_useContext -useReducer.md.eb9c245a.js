import{_ as s,c as n,o as a,a as l}from"./app.48148ea1.js";const F=JSON.parse('{"title":"useContext -useReducer","description":"","frontmatter":{},"headers":[{"level":2,"title":"useContext","slug":"usecontext","link":"#usecontext","children":[]},{"level":2,"title":"\u914D\u5408useReducer\u4F7F\u7528","slug":"\u914D\u5408usereducer\u4F7F\u7528","link":"#\u914D\u5408usereducer\u4F7F\u7528","children":[]}],"relativePath":"React/useContext -useReducer.md","lastUpdated":null}'),p={name:"React/useContext -useReducer.md"},e=l(`<h1 id="usecontext-usereducer" tabindex="-1"><code>useContext</code> -<code>useReducer</code> <a class="header-anchor" href="#usecontext-usereducer" aria-hidden="true">#</a></h1><h2 id="usecontext" tabindex="-1">useContext <a class="header-anchor" href="#usecontext" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CountContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#8B949E;">//CountProvider\u548CuseCount\u5199\u5728\u5916\u90E8\u5BFC\u5165</span></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CountProvider</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">props</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">count</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">setCount</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useState</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [count, setCount]</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">CountContext.Provider</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">value</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">{...</span><span style="color:#C9D1D9;">props</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCount</span><span style="color:#C9D1D9;">() {                        </span><span style="color:#8B949E;">//\u5C01\u88C5useCount</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">context</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useContext</span><span style="color:#C9D1D9;">(CountContext)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">!</span><span style="color:#C9D1D9;">context) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;useCount must be used within a CountProvider&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> context</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CountDisplay</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">count</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCount</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span><span style="color:#FF7B72;">{</span><span style="color:#A5D6FF;">\`The current count is \${</span><span style="color:#C9D1D9;">count</span><span style="color:#A5D6FF;">}\`</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Counter</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [, </span><span style="color:#79C0FF;">setCount</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useCount</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCount</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">c</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> c </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">increment</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;Increment count&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">CountProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">CountDisplay</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">Counter</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;/</span><span style="color:#7EE787;">CountProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CountContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CountProvider</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">props</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">count</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">setCount</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useState</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> [count, setCount]</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// const value = React.useState(0)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">CountContext.Provider</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">value</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">value</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">{...</span><span style="color:#C9D1D9;">props</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CountDisplay</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">count</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useContext</span><span style="color:#C9D1D9;">(CountContext)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span><span style="color:#FF7B72;">{</span><span style="color:#A5D6FF;">\`The current count is \${</span><span style="color:#C9D1D9;">count</span><span style="color:#A5D6FF;">}\`</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Counter</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> [, </span><span style="color:#79C0FF;">setCount</span><span style="color:#C9D1D9;">] </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">useContext</span><span style="color:#C9D1D9;">(CountContext)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">increment</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">setCount</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">c</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> c </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">onClick</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">increment</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;Increment count&lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;">() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">CountProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">CountDisplay</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">Counter</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;/</span><span style="color:#7EE787;">CountProvider</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="\u914D\u5408usereducer\u4F7F\u7528" tabindex="-1">\u914D\u5408useReducer\u4F7F\u7528 <a class="header-anchor" href="#\u914D\u5408usereducer\u4F7F\u7528" aria-hidden="true">#</a></h2><p>CounterCotext.jsx</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CounterContext</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> React.</span><span style="color:#D2A8FF;">createContext</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">CounterContext</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>CounterReducer.jsx</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CounterReducer</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> (</span><span style="color:#FFA657;">state</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">action</span><span style="color:#C9D1D9;">)</span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">switch</span><span style="color:#C9D1D9;"> (action.type){</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;counter/increment&#39;</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">         </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> state </span><span style="color:#FF7B72;">+</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">case</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;counter/decrement&#39;</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">         </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> state </span><span style="color:#FF7B72;">-</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">default</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">         </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> state;</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">CounterReducer</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>App.jsx</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;">  CounterContext</span></span>
<span class="line"><span style="color:#C9D1D9;">import  CounterReducer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">function App() {</span></span>
<span class="line"><span style="color:#C9D1D9;">  const [state,dispacth] = React.useReducer(CounterReducer,0)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span></span>
<span class="line"><span style="color:#C9D1D9;">  return (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;CounterContext.Provider value={{state,dispath}}&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;Counter /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;/CounterContext.Provider&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Counter.jsx</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;">  useContext</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">const Counter = () =&gt;{</span></span>
<span class="line"><span style="color:#C9D1D9;"> const count = React.useContext(CounterContext)</span></span>
<span class="line"><span style="color:#C9D1D9;"> const dispatch = count.dispatch</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span></span>
<span class="line"><span style="color:#C9D1D9;"> return (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;div&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;button onClick={()=&gt;{dispatch({type:&#39;counter/increment&#39;})}}&gt;&lt;/button&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;span&gt;{count.state}&lt;/span&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;button onClick={()=&gt;{dispatch({type:&#39;counter/decrement&#39;})}}&gt;&lt;/button&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  )</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,13),o=[e];function t(c,r,D,y,C,i){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
